#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass abntex2
\begin_preamble

\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language brazilian
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle plain
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
A partir do problema identificado e da revisão da literatura foi encontrado
 que o desenvolvimento de ontologias é um área de pesquisa abrangida pela
 Web Semântica que permite desenvolver sistemas web baseados em conhecimento,
 satisfazendo os requisitos de desenvolvimento do SAD SustenAgro explicados
 no capitulo 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:SAD"

\end_inset

.
\end_layout

\end_inset


\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
A web foi criada para possibilitar o acesso, intercâmbio e recuperação de
 informações de maneira rápida e simples, seu crescimento exponencial e
 caótico fez com que a mesma se tornasse hoje um gigantesco repositório
 de documentos, o que dificulta a recuperação de informações.
 Até o momento, não existe nenhuma estratégia abrangente e satisfatória
 para a indexação de documentos por meio de “motores de busca” que seja
 coerente com uma estrutura linguística.
 
\begin_inset CommandInset citation
LatexCommand citep
key "Souza:2004"

\end_inset

.
\end_layout

\end_inset


\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Um exemplo da deficiência da web atual, pode ser identificada na busca realizada
 pelos sistemas de recuperação de informação, que usam palavras-chave nas
 buscas, onde apenas a similaridade e o número de ocorrências de certas
 palavras no conteúdo de documentos são levados em consideração e não a
 semântica presente naquela informação.
 
\begin_inset CommandInset citation
LatexCommand citep
key "Souza:2004"

\end_inset

.
\end_layout

\end_inset

Ontologias e DSLs têm um papel fundamental para a ideia de um framework
 para criação de SADs.
 Ontologias servem para representar o conhecimento de especialistas do domínio
 e DSLs servem para customizar o comportamento dos SADs.
 Neste capítulo, vamos apresentar e discutir essas duas tecnologias.
 
\end_layout

\begin_layout Standard
Ontologias apareceram originalmente no contexto da filosofia, onde se referem
 ao estudo da natureza, existência e realidade dos entes.
 Elas são usadas em vários campos do conhecimento.
 Neste projeto, ontologias se referem a representações de conhecimento,
 que precisam ser implementadas em código.
 Essas implementações devem trabalhar com ontologias, na sua criação, armazename
nto, busca e modificação, e que seguir padrões e formatos abertos.
 As tecnologias da Web Semântica fornecem exatamente isso.
\end_layout

\begin_layout Standard
Neste capítulo, vamos apresentar e discutir conceitos usados da Web Semântica:
 fundamentos da Web Semântica, Ontologias, o 
\lang english
Resource Description Framework (RDF
\lang brazilian

\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "RDF"
description "Resource Description Framework"

\end_inset

) e a 
\lang english
Web Ontology Language
\lang brazilian
 (
\lang english
OWL
\lang brazilian
).
 Também serão abordadas as 
\lang english
Domain Specific Languages (DSLs
\lang brazilian

\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "DSL"
description "Domain Specific Language"

\end_inset

) que são linguagens de propósito especifico que permitem definir um meio
 de comunicação entre os especialistas e o sistema desenvolvido.
\end_layout

\begin_layout Section
Web Semântica.
\end_layout

\begin_layout Standard
A interpretação do significado é uma habilidade inata dos seres humanos,
 através da associação dos conceitos que estão no cérebro por meio de estruturas
 neurais.
 Já as maquinas não têm essa habilidade.
 A Web Semântica procura criar métodos para que as máquinas consigam realizar
 essa interpretação..
\end_layout

\begin_layout Standard
A Web Semântica tem como finalidade estruturar os dados e informações disponívei
s na Web, para que tenham significado e sejam computáveis por máquinas.
 Gerando um ambiente onde agentes de software e usuários possam trabalhar
 de maneira cooperativa.
 A Web Semântica é formada por um conjunto de padrões propostos pelo 
\lang english
World Wide Web Consortium
\lang brazilian
 (W3C 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "W3C"
description "World Wide Web Consortium"

\end_inset

).
 Na figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Semantic_Web_History"

\end_inset

, podem ser observados alguns dos padrões que constituem a Web Semântica
 e uma comparação cronológica com os padrões da 
\lang english
eXtensible Markup Language
\lang brazilian
 
\lang english
(XML
\lang brazilian
 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "XML"
description "Extensible Markup Language"

\end_inset

).
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Para que essa comparação? O que XML tem haver?
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../figures/Semantic Web History.png
	lyxscale 20
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
História da Web Semântica 
\begin_inset CommandInset label
LatexCommand label
name "fig:Semantic_Web_History"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand citet
key "bernerslee2001"

\end_inset

 propuseram a Web Semântica, em 2001, como uma extensão da Web atual, na
 qual é possível vincular conceitos de maneira estruturada e padronizada.
 Permitindo a criação de conhecimento estruturado, computável por máquinas,
 que pode ser compartilhado entre humanos e máquinas.
 A finalidade é criar uma web universal dos conhecimentos da humanidade.
 
\end_layout

\begin_layout Standard
A partir dessa visão conceitual sobre a Web, 
\begin_inset CommandInset citation
LatexCommand citet
key "bernerslee2001"

\end_inset

 propuseram uma arquitetura que organiza as representações do conhecimento
 por meio de camadas, conhecida como 
\lang english
Semantic Web Cake,
\lang brazilian
 que é ilustrada na Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Web-Semantic-Architecture"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../figures/Semantic Web Architecture.png
	width 60col%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Arquitetura em camadas da Web Semântica
\begin_inset CommandInset label
LatexCommand label
name "fig:Web-Semantic-Architecture"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
A base dessa arquitetura é estabelecida pelos padrões 
\lang english
Unicode
\lang brazilian
 e 
\lang english
Uniform Resource Identifier
\lang brazilian
 (URI
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "URI"
description "Uniform Resource Identifier"

\end_inset

), que padronizam a representação dos dados por meio das seguintes camadas:
 
\end_layout

\begin_layout Description

\lang english
Unicode
\lang brazilian
 é um padrão que codifica os caracteres na maioria dos sistemas de escrita
 para representação de texto com fines de processamento computacional.
\end_layout

\begin_layout Description

\lang english
URI
\lang brazilian
 permite identificar unicamente os recursos disponíveis na Web por meio
 de uma 
\lang english
String.
\end_layout

\begin_layout Description

\lang english
XML
\lang brazilian
 representa os dados de maneira sintática, através da definição de 
\lang english
markups
\lang brazilian
 que codificam documentos em formatos preestabelecidos.
 Ela permite que informações sejam legíveis tanto por humanos como por computado
res, suportando as camadas superiores na arquitetura.
\end_layout

\begin_layout Description

\lang english
RDF
\lang brazilian
 é a camada de descrição que permite especificar o domínio de conhecimento.
 Ela também é usada como um método geral para descrição conceitual da modelagem
 de informação 
\begin_inset Note Note
status open

\begin_layout Plain Layout
???
\end_layout

\end_inset

por meio de recursos, usa notações sintáticas e formatos de serialização.
\end_layout

\begin_layout Description

\lang english
Ontology
\lang brazilian
 estende a camada de descrição, fornecendo mais expressividade na definição
 de conceitos, de classificações, de relações e de inferência.
\end_layout

\begin_layout Description

\lang english
Logic
\lang brazilian
 permite definir regras lógicas para deduzir e inferir novas informações
 que conseguem mudar a estrutura da ontologia de maneira dinâmica.
\end_layout

\begin_layout Description

\lang english
Proof
\lang brazilian
 fornece mecanismos para avaliar o nível de confiabilidade das fontes de
 recursos e informações.
\end_layout

\begin_layout Description

\lang english
Trust
\lang brazilian
 representa o conhecimento validado e confiável.
\end_layout

\begin_layout Description

\lang english
Digital-Signature
\lang brazilian
 permite integrar métodos de segurança que garantam a segurança da informação.
\end_layout

\begin_layout Standard
Uma das contribuições importantes da Web Semântica foi a formalização da
 representação de ontologias (próxima sessão).
 No desenvolvimento desta pesquisa, foram usadas desde as camadas inferiores
 até o 
\lang english
OWL
\lang brazilian
, permitindo definir ontologias que representam os domínios de conhecimento.
\end_layout

\begin_layout Section
Ontologias
\end_layout

\begin_layout Standard
Existem várias interpretações do conceito ontologia, dependendo da finalidade
 para qual elas sejam usadas.
 
\begin_inset CommandInset citation
LatexCommand citet
key "Smith2007"

\end_inset

 descrevem a ontologia como uma área da filosofia, que estuda a natureza,
 existência e realidade dos entes, assim como as categorias do ser e das
 relações semânticas.
\end_layout

\begin_layout Standard
Na ciências da computação e informação, a palavra 
\begin_inset Quotes eld
\end_inset

ontologia
\begin_inset Quotes erd
\end_inset

 é definida como uma especificação formal e explicita de uma conceitualização
 compartilhada de um domínio de conhecimento.
 
\begin_inset CommandInset citation
LatexCommand citet
key "allemang2011semantic"

\end_inset

 definem as ontologias, no contexto da Web Semântica, como um esquema de
 representação que permite conceitualizar e estruturar conhecimento, permitindo
 a sua interpretação por computadores, com o objetivo de compartilhar conhecimen
to entre humanos e computadoras.
\end_layout

\begin_layout Standard
Uma ontologia é um sistema de organização e representação do conhecimento,
 do inglês 
\lang english
Knowledge Organization System (KOS)
\lang brazilian
, que é uma estrutura conceitual e computacional que permite representar
 o conhecimento, de qualquer domínio, por meio de entidades, classificações,
 relações semânticas, regras e axiomas.
 Uma ontologia é especificada por meio de componentes básicos que são as
 classes, relações, axiomas e instâncias.
 
\end_layout

\begin_layout Description

\series bold
Classes
\series default
 são o foco da maioria das ontologias.
 Elas são utilizadas para descrever os conceitos de um domínio, possibilitando
 a organização e classificação dos indivíduos em um sistema lógico e hierárquico
, contendo subclasses que representam conceitos específicos 
\begin_inset CommandInset citation
LatexCommand citep
key "noy2001ontology"

\end_inset

.
 
\end_layout

\begin_layout Description

\series bold
Relações
\series default
 representam o tipo de interação entre os conceitos de um domínio e as proprieda
des presentes nas classes e indivíduos.
 Elas podem ter características próprias, como serem transitivas, simétricas,
 ou terem uma cardinalidade definida.
 
\end_layout

\begin_layout Description

\series bold
Axiomas
\series default
 são utilizados para modelar regras assumidas como verdadeiras no domínio
 em questão, de modo que seja possível associar relacionamentos entre os
 indivíduos, além de fornecer características descritivas e lógicas para
 os conceitos.
 
\end_layout

\begin_layout Description

\series bold
Indivíduos
\series default
, ou instâncias das classes, são utilizados para representar elementos específic
os, ou seja, os próprios dados, que juntamente com a definição de uma ontologia,
 constituem a base de conhecimento 
\begin_inset CommandInset citation
LatexCommand citep
key "noy2001ontology"

\end_inset

.
 Indivíduos representam objetos do domínio de interesse 
\begin_inset CommandInset citation
LatexCommand citep
key "horridge2011owl"

\end_inset

.
\end_layout

\begin_layout Standard
Segundo 
\begin_inset CommandInset citation
LatexCommand citet
key "Patel-schneider05buildingthe"

\end_inset

, a representação de uma ontologia é feita por meio de lógica de predicados
 e lógica descritiva, usando padrões adotados pela comunidade, como 
\lang english
RDF
\lang brazilian
 e 
\lang english
OWL
\lang brazilian
.
 A Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Smart-data-continuum"

\end_inset

 mostra os níveis de representação de dados na forma de conhecimento processável
 por máquinas.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../figures/smart data.png
	lyxscale 50
	width 60col%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\lang english
Smart data continuum
\lang brazilian
: níveis de representação de dados na forma de conhecimento processável
 por máquinas.
\begin_inset CommandInset label
LatexCommand label
name "fig:Smart-data-continuum"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
O nível mais baixo de representação começa com os dados sem nenhum significado
 semântico, dependentes do contexto da aplicação.
 O segundo nível envolve a definição de esquemas 
\lang english
XML
\lang brazilian
 para conseguir independência dos dados da aplicação, os dados fluem entre
 aplicações em um único domínio mas não podem ser compartilhados fora do
 domínio.
 No terceiro nível, os dados podem ser combinados a partir de diferentes
 domínios, sendo suficientemente independentes para serem recuperados e
 combinados com outras fontes de dados.
 Finalmente no quarto nível, é possível inferir novos dados a partir dos
 existentes e compartilha-los entre aplicações sem requerer interferência
 humana 
\begin_inset CommandInset citation
LatexCommand citep
key "sugumaran2011"

\end_inset

.
\end_layout

\begin_layout Section

\lang english
Resource Description Framework
\lang brazilian
 (
\lang english
RDF
\lang brazilian
)
\end_layout

\begin_layout Standard
O 
\lang english
Resource Description Framework (RDF)
\lang brazilian
 é uma família de especificações da W3C, que foi disponibilizada em 1999
 como parte do W3C's 
\lang english
Semantic Web Effort
\lang brazilian
.
 Elas fornecem um 
\lang english
framework
\lang brazilian
 comum que permite que dados sejam compartilhados e reusados através das
 fronteiras das aplicações, empresas e comunidades 
\begin_inset Foot
status open

\begin_layout Plain Layout
http://www.w3.org/2001/sw/
\end_layout

\end_inset

.
 O RDF foi originalmente projetado como um modelo de metadados e também
 chegou a ser usado como um método de descrições conceituais, principalmente
 para descrever recursos web.
 
\end_layout

\begin_layout Standard
O 
\lang english
RDF
\lang brazilian
 é usado em várias áreas de aplicação, como 
\emph on
\lang english
resource discovery
\emph default
\lang brazilian
, para melhorar as capacidades dos motores de busca, 
\emph on
\lang english
cataloging
\emph default
\lang brazilian
, para descrever conteúdo e as relações de conteúdo disponibilizados em
 um sistema web particular, e descrição de 
\emph on
\lang english
intellectual property rights
\emph default
\lang brazilian
 de páginas web.
 Seu modelo básico de dados consiste em um padrão de três tipos de objetos:
\end_layout

\begin_layout Itemize

\series bold
Sujeito
\series default
: representa os recursos e são identificados por meio de 
\lang english
URIs
\lang brazilian

\begin_inset Note Note
status open

\begin_layout Plain Layout
Vc ja flou de URIs?
\end_layout

\end_inset

.
 Por exemplo, uma página web ou um elemento 
\lang english
HyperText Markup Language (HTML 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "HTML"
description "HyperText Markup Language"

\end_inset

)
\lang brazilian
 podem ser recursos.
\end_layout

\begin_layout Itemize

\series bold
Predicado
\series default
: são aspectos, características, atributos ou relações especificas que descrevem
 o sujeito, cada predicado têm um significado especifico e relaciona um
 sujeito com um objeto.
\end_layout

\begin_layout Itemize

\series bold
Objeto
\series default
: um recurso especifico ou valor de propriedade que representa uma característic
as do sujeito 
\begin_inset Foot
status open

\begin_layout Plain Layout
http://www.w3.org/TR/PR-rdf-syntax/
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Com 
\lang english
RDF
\lang brazilian
 é possível explicitar relações entre dois objetos (usando-se uma Tripla
 
\lang english
RDF
\lang brazilian
), mas não é possível fazer modelagens especificas nem inferência.
 Para descrever detalhadamente o que um objeto representa e suas relações
 com outros objetos, são necessárias ontologias descritas no padrão 
\lang english
OWL
\lang brazilian
.
 
\end_layout

\begin_layout Section

\lang english
Web Ontology Language
\lang brazilian
 (
\lang english
OWL
\lang brazilian
)
\end_layout

\begin_layout Standard
A 
\lang english
Web Ontology Language
\lang brazilian
 (
\lang english
OWL
\lang brazilian
) foi recomendada pelo W3C em 2004 para representar e compartilhar ontologias
 na Web.
 Essa linguagem foi projetada para aplicações que necessitam processar o
 conteúdo da informação, em vez de apenas organizar informações em nós 
\begin_inset CommandInset citation
LatexCommand citep
key "mcguinness2004owl"

\end_inset

.
 
\lang english
OWL
\lang brazilian
 é uma linguagem que permite que a semântica seja explicitamente associada
 ao conteúdo dos dados na web e formalmente especificada através de ontologias,
 compartilhadas na Internet.
 
\end_layout

\begin_layout Standard
A versão 
\lang english
OWL
\lang brazilian
 2 é a versão mais recente da linguagem.
 De acordo com as especificações do W3C
\begin_inset Foot
status open

\begin_layout Plain Layout
http://www.w3.org/TR/owl2-overview/
\end_layout

\end_inset

, a 
\lang english
OWL 2
\lang brazilian
 adicionou três novos perfis (
\lang english
sub-linguagens
\lang brazilian
) aos perfis DL e 
\lang english
Full
\lang brazilian
 já existentes: 
\lang english
OWL 2
\lang brazilian
 EL,
\lang english
 OWL 2 QL
\lang brazilian
 e 
\lang english
OWL RL
\lang brazilian
 (Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:OWL2-Profiles"

\end_inset

).
 Cada um desses perfis fornece características de expressividade diferente
 para diversos cenários de aplicação:
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../figures/owl2Profiles.png
	width 60col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
OWL2 Profiles.
\begin_inset CommandInset label
LatexCommand label
name "fig:OWL2-Profiles"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description

\lang english
Full
\lang brazilian
 O perfil 
\lang english
OWL Full
\lang brazilian
 é direcionado para usuários que querem a máxima expressividade e a liberdade
 sintática do 
\lang english
OWL
\lang brazilian
 sem garantia computacional.
 É improvável que qualquer motor de raciocínio seja capaz de suportar completame
nte cada recurso da 
\lang english
OWL Full
\lang brazilian
 
\begin_inset CommandInset citation
LatexCommand citep
key "mcguinness2004owl"

\end_inset

.
\end_layout

\begin_layout Description
DL O perfil 
\lang english
OWL DL
\lang brazilian
 (
\lang english
Description Logic
\lang brazilian
) é para aplicações que necessitam de máxima expressividade, enquanto mantém
 a computabilidade (todas as conclusões são garantidas de ser computáveis)
 e decidibilidade (todas as computações terminarão em tempo finito) 
\begin_inset CommandInset citation
LatexCommand citep
key "mcguinness2004owl"

\end_inset

.
 
\lang english
OWL DL
\lang brazilian
 inclui as construções da linguagem 
\lang english
OWL
\lang brazilian
, mas elas podem ser usadas somente sob certas restrições.
 
\end_layout

\begin_layout Description
EL O perfil 
\lang english
OWL
\lang brazilian
 2 EL é baseado na família EL++ de lógica descritiva (
\lang english
Description
\lang brazilian
 
\lang english
Logic
\lang brazilian
).
 Esse perfil é particularmente útil em aplicações utilizando ontologias
 que contêm um grande número de propriedades e/ou classes.
 Além disso, o 
\lang english
OWL
\lang brazilian
 2 EL utiliza um padrão comum, utilizado em ontologias, para conceitos e
 planejamento, ou seja, a combinação de conjunção e qualidades existenciais.
\end_layout

\begin_layout Description

\lang english
QL
\lang brazilian
 O perfil 
\lang english
OWL 2 QL
\lang brazilian
 é baseado na família 
\lang english
DL-Lite
\lang brazilian
 de lógica descritiva.
 Esse perfil foi criado para permitir o raciocínio (
\lang english
reasoning
\lang brazilian
) eficiente com grandes quantidades de dados estruturados de acordo com
 esquemas relativamente simples.
 Ele fornece a maioria dos recursos necessários para capturar modelos conceituai
s, tais como diagramas de classe UML, diagramas de entidade/relacionamento,
 e esquemas de banco de dados.
 
\end_layout

\begin_layout Description
RL O perfil 
\lang english
OWL 2 RL
\lang brazilian
 é voltado para aplicações que exigem raciocínio escalável em troca de alguma
 restrição de poder expressivo.
 Ele define um subconjunto sintático de 
\lang english
OWL 2
\lang brazilian
 que favorece a implementação utilizando tecnologias baseadas em regras.
 Esse perfil pode ser utilizado na maioria das construções 
\lang english
OWL 2
\lang brazilian
.
 Porém, para permitir implementações baseadas em regras de raciocínio, a
 forma como essas construções podem ser usadas em axiomas foi restringida.
 
\end_layout

\begin_layout Standard
A ferramenta para criar ontologias em OWL, recomendada pela comunidade,
 e usada na presente pesquisa foi o editor Protégé
\begin_inset Foot
status open

\begin_layout Plain Layout
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://protege.stanford.edu/
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
tem citacao para o Protege nao precisa usar footnote
\end_layout

\end_inset

.
 Ele permite a edição de ontologias por usuários com conhecimento da linguagem
 OWL e oferece amplo suporte à definição de ontologias através de vários
 plugins.
\begin_inset Note Note
status open

\begin_layout Plain Layout
terminou meio seco.
 Você poderia ter falado da ou de como usou o Protege ou de como ontologias
 foram integradas na ferramenta.
 ou do fato que Domain Experts nao poderiam usar OWL diretamente.
\end_layout

\end_inset


\end_layout

\begin_layout Section

\lang english
Domain Specific Language (DSL)
\lang brazilian
 
\end_layout

\begin_layout Standard
Em desenvolvimento de software e engenharia de domínio uma linguagem de
 domínio específico, em inglês 
\emph on
\lang english
Domain-Specific Language
\lang brazilian
 (DSL)
\emph default
, é um tipo de linguagem de programação, ou linguagem de especificação,
 dedicada a um domínio particular de problema que usa expressões próprias
 dos especialistas daquele domínio.
 Um usuário, relacionado com um domínio específico, pode usar uma DSL sem
 ter experiência em desenvolvimento de software pois a DSL está relacionada
 com seu domínio de trabalho.
 
\begin_inset CommandInset citation
LatexCommand citet
key "fowler2010domain"

\end_inset

 diz que programadores instruem o computador no que ele deve fazer, pois
 já entendem a maneira dele trabalhar, mas com 
\lang english
DSLs
\lang brazilian
 é feito o inverso: o computador começa a entender o que o programador (usuário)
 escreve.
\end_layout

\begin_layout Standard
Segundo 
\begin_inset CommandInset citation
LatexCommand citet
key "Mernik:2005:DDL:1118890.1118892"

\end_inset

, as vantagens das DSL, em comparação com as linguagens de propósito geral,
 são a expressividade, facilidade de uso e a integração com o domínio da
 aplicação.
 O conceito não é novo, linguagens de programação de propósito especifico
 existiram desde o começo das linguagens de programação, mas o termo tornou-se
 padrão devido à ascensão da modelagem de domínio específico, elas são classific
adas em:
\end_layout

\begin_layout Itemize

\lang english
Domain-Specific Markup Languages
\lang brazilian
: são linguagens de um domínio particular com a particularidade de anotar
 os dados para que eles sejam sintaticamente distinguíveis.
 Um exemplo delas é a 
\lang english
Hypertext Markup Language (HTML),
\lang brazilian
 que permite anotar dados no domínio das páginas web.
\end_layout

\begin_layout Itemize

\lang english
Domain-Specific Modeling Languages:
\lang brazilian
 são linguagens que permitem expressar informação, conhecimento o sistemas
\begin_inset Note Note
status open

\begin_layout Plain Layout
???
\end_layout

\end_inset

 em uma estrutura consistente com um conjunto de regras que permitem interpretar
 o significado dos componentes modelados.
 Uma linguagem deste tipo é a 
\lang english
Unified Modeling Language
\lang brazilian
 (
\lang english
UML
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "UML"
description "Unified Modeling Language "

\end_inset


\lang brazilian
) que permite especificar sistemas de software.
\end_layout

\begin_layout Itemize

\lang english
Domain-Specific Programming Languages:
\lang brazilian
 são linguagens que permitem a programação em alto nível aplicada a um domínio
 especifico de conhecimento.
 Uma linguagem desse tipo é a R que permite a programação de conceitos estatísti
cos e geração de gráficos.
 
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Coloque um paragrafo sobre internal and external DSLs.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Neste projeto, DSLs servem para customizar o comportamento dos SADs.
 Por isso, uma Domain-Specifc Programming Language foi desenvolvida.
 Ela faz uso da ontologia para organizar o conhecimento do domínio e definir
 o comportamento dos SADs (Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Componente-DSL"

\end_inset

).
 Para facilitar a criação desse tipo de DSL, a linguagem 
\lang english
Groovy
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\lang english
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://groovy-lang.org/
\end_layout

\end_inset


\end_layout

\end_inset


\lang brazilian
 foi escolhida para implementação.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../figures/DSL Diagram.png
	width 50col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Componente DSL 
\begin_inset CommandInset label
LatexCommand label
name "fig:Componente-DSL"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection
Linguagem Groovy
\end_layout

\begin_layout Standard
Groovy é uma linguagem dinâmica para a máquina virtual Java (JVM) 
\begin_inset CommandInset citation
LatexCommand citet
key "koenig2007groovy"

\end_inset

.
 Ela tem uma sintaxe parecida com Java, suporte para programação funcional,
 produz JVM bytecodes e interopera bem com código e bibliotecas Java.
 Ela traz características de linguagens como Python, Ruby e Smalltalk para
 uma linguagem similar a Java 
\begin_inset CommandInset citation
LatexCommand citet
key "koenig2007groovy"

\end_inset

.
\end_layout

\begin_layout Standard
O grande benefício que Groovy traz para este projeto, é o suporte que sua
 natureza dinâmica dá ao desenvolvimento de DSLs.
 Essas DSLs podem rodar diretamente na JVM e usar bibliotecas Java já existentes.
 DSLs em Groovy se integram facilmente à própria linguagem Groovy de modo
 que não é aparente onde o código em Groovy termina e a DSL começa REF
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Groovy for Domain-Specific Languages Fergal Dearle
\end_layout

\end_inset

.
 Isso permite que a DSL seja implementada como uma DSL interna, estendendo
 a linguagem Groovy (e simplificando a sua criação), mas mantenha uma sintaxe
 próxima à linguagem usada pelos especialistas de domínio.
 Como uma DSL interna, ela pode usar ferramentas já existentes para auxiliar
 a escrita de código em Groovy, como editores com 
\shape italic
syntax highlighting
\shape default
 e 
\shape italic
code completion
\shape default
, para a sua edição.
\end_layout

\begin_layout Standard
Outra vantagem de Groovy é que ela é uma linguagem para a JVM e existem
 muitas bibliotecas, em Java, que dão suporte às tecnologias da Web Semântica.
 Isso inclui bibliotecas como a OWL API, para trabalhar com ontologias em
 OWL, Apache Jena, para acesso a triple stores, entre outras.
 Finalmente, os SAPs a serem criados serão aplicativos web, Groovy tem um
 web framework muito poderoso.
 Grails
\lang english

\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\lang english
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://grails.org/
\end_layout

\end_inset


\end_layout

\end_inset


\lang brazilian
.
 Grails usa uma abordagem de convenção sobre configuração que usa opções
 default razoáveis.
 Ele se integra bem com a JVM e tem características como ORM integrado,
 DSLs, metaprogramação durante runtime e compile-time e programação assíncrona
 REF
\begin_inset Note Note
status open

\begin_layout Plain Layout
Grails in Action GLEN SMITH PETER LEDBROOK
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
foi determinado que os especialistas de domínio não têm um conhecimento
 detalhado sobre modelagem de conhecimento usando os padrões da web semântica,
 descritos neste capitulo.
 
\end_layout

\begin_layout Plain Layout
Também foi determinado que as ontologias permitem uma definição detalhada
 do conhecimento do domínio, pelo que foi necessário definir uma camada
 intermédia que facilitasse a definição do conhecimento por parte dos especialis
tas.
 
\end_layout

\begin_layout Plain Layout
Por isso foi identificado a necessidade de uma DSL adequada ao nível de
 conhecimento de computação dos especialistas, e que contenha termos familiares
 ao domínio desses especialistas.
 
\end_layout

\end_inset


\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Pelo qual uma DSL de tipo 
\lang english
programming
\lang brazilian
 pode suportar a definição de conhecimento dos especialistas, fornecendo
 uma solução compatível com os termos específicos deles.
 Facilitando que os especialistas especifiquem os SAD com um grau de detalhament
o suficiente para definir o conhecimento deles sem intervenção dos desenvolvedor
es de software, os especialistas poderiam se tornar, na prática, programadores
 de seus próprios SADs.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Trabalhos relacionados?
\end_layout

\begin_layout Standard
Após uma pesquisa bibliográfica não foi possível encontrar sistemas que
 propusessem a geração automática de interface para Sistemas de Apoio a
 Decisão (SADs) com ou sem o uso de ontologias.
 Os artigos encontrados mais próximos ao tema deste trabalho tratam do uso
 de ontologias ou de 
\lang english
frameworks
\lang brazilian
 em SADs para a área de sustentabilidade, área que vai ser usada neste trabalho
 para teste dos sistemas desenvolvidos.
\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand citet
key "ruiz2006using"

\end_inset

 analisou e identificou 50 tipos de uso de ontologias na engenharia de software,
 entre as quais foram identificados dois usos no suporte a interfaces gráficas.
 
\begin_inset CommandInset citation
LatexCommand citet
key "paulheim2012ontology"

\end_inset

 propõem a definição de uma 
\lang english
ontology-enhanced user
\lang brazilian
 interface, que são um tipo de GUIs cujas capacidades de visualização, possibili
dades de interação, ou processo de desenvolvimento são habilitados ou (pelo
 menos) melhorados pelo emprego de uma ou mais ontologias.
 Nessa pesquisa foram identificados três propósitos para os quais são usadas
 as ontologias no melhoramento das interfaces gráficas:
\end_layout

\begin_layout Enumerate
Melhorar as capacidades de visualização
\end_layout

\begin_layout Enumerate
Melhorar as possibilidades de interação
\end_layout

\begin_layout Enumerate
Melhorar o processo de desenvolvimento
\end_layout

\begin_layout Standard
A figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Ontology-Enhanced-User-Interfaces-1"

\end_inset

 apresenta os tipos de usos das ontologias nas UI.
 
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../figures/Ontology-enhanced user interfaces.png
	width 70col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\lang english
Ontology Enhanced User Interfaces
\begin_inset CommandInset label
LatexCommand label
name "fig:Ontology-Enhanced-User-Interfaces-1"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Essas pesquisam dão a noção de que ontologias podem contribuir significativament
e na geração de Web UI flexíveis e de SADs, confirmando a hipótese assumida
 na presente pesquisa.
 
\end_layout

\begin_layout Section
Considerações finais
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Precisa melhorar essa conclusao.
 Tente linkar com o proximo capítulo.
\end_layout

\end_inset

Os conceitos apresentados neste capítulo fornecem o suporte tecnológico
 para abordar o desenvolvimento de sistemas baseados em conhecimento, particular
mente as ontologias suportaram vários aspectos cruciais, pelo qual elas
 foram um dos focos centrais da presente pesquisa.
 
\end_layout

\end_body
\end_document
