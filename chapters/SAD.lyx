#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass abntex2
\begin_preamble

\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language brazilian
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle plain
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
A construção de sistemas que sejam capazes de fornecer um suporte ao gestor
 em um processo de tomada de decisões vem sendo um desafio ao longo dos
 anos.
 Sistemas de Apoio a Decisão (SAD) 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "SAD"
description "Sistemas de Apoio a Decisão"

\end_inset

 são sistemas que possuem meios que auxiliam a comparação, analise e apoio
 para escolha de alternativas num processo de decisão.
 Sendo necessária a integração de metodologias feitas por especialistas
 da área em questão 
\begin_inset CommandInset citation
LatexCommand citet
key "heinzle2010semantica"

\end_inset

.
\end_layout

\begin_layout Standard
SADs auxiliam tomadores de decisão dando-lhes um maior entendimento do domínio.
 Eles combinam as habilidades dos especialistas (humanos) à capacidade dos
 computadores de acessar dados, estruturar eles em modelos, interpretar,
 formular e avaliar alternativas e cenários distintos onde podem haver possíveis
 soluções para os problemas que se querem solucionar 
\begin_inset CommandInset citation
LatexCommand citet
key "lu2006application"

\end_inset

.
\end_layout

\begin_layout Standard
O autor 
\begin_inset CommandInset citation
LatexCommand citet
key "junior2006sistemas"

\end_inset

 cita algumas vantagens dos SADs:
\end_layout

\begin_layout Itemize
Manuseio de extensos volumes de dados: estes sistemas permitem a utilização
 de grandes volumes de dados para analisar resultados;
\end_layout

\begin_layout Itemize
Captação de dados de várias fontes: SADs tem a capacidade de obter dados
 externos e integrá-los a dados já existentes;
\end_layout

\begin_layout Itemize
Flexibilidade na geração de relatórios: sistemas desse tipo podem exibir
 relatórios e/ou resultados do jeito mais usável pelo tomador de decisões;
\end_layout

\begin_layout Itemize
Solução de Problemas: tem-se a capacidade de encontrar soluções em problemas
 simples e encontrar soluções viáveis em problemas complexos;
\end_layout

\begin_layout Itemize
Execução de simulações: um SAD pode fazer modificações teóricas nos dados
 e observar os impactos que isso causa nos resultados;
\end_layout

\begin_layout Itemize
Suporte a todos os níveis de tomada de decisões: esse tipo de sistema pode
 auxiliar em todos os níveis de tomada de decisões dentro de uma organização.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename /home/john/Desktop/masters-degree-dissertation/figures/SAD.jpeg
	lyxscale 90
	width 80col%
	clip

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Componentes de um SAD 
\begin_inset CommandInset citation
LatexCommand citet
key "junior2006sistemas"

\end_inset

.
\begin_inset CommandInset label
LatexCommand label
name "fig:Componentes-SAD"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
A Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Componentes-SAD"

\end_inset

 mostra os componentes genéricos de um SAD.
 Eles podem ser divididos em dados, banco de modelos, base de conhecimento
 e interface de usuário; o banco de dados armazena os dados não tratados,
 é importante que dito banco seja mantido atualizado para um resultado confiável
, o banco de modelos armazena vários modelos que auxiliam a criação de cenários
 para a tomada de decisões, o banco de conhecimento é produzido a partir
 do entendimento profundo do domínio de conhecimento no qual são abstraídas
 as regras do sistema e a interface de usuário representa cada camada do
 SADs para que o usuário interaja com ele.
\end_layout

\begin_layout Section
Arquitetura para Sistemas de Apoio à Decisão
\end_layout

\begin_layout Standard
A arquitetura de um software define a organização em termos de seus componentes,
 suas interconexões, suas interações e também suas principais propriedades
 
\begin_inset CommandInset citation
LatexCommand citet
key "de1997software"

\end_inset

.
 Ela fornece as informações de como os elementos envolvidos nela se relacionam.
 Arquiteturas trabalham a parte externa das ligações entre seus elementos,
 implementações internas desses elementos não são considerados arquiteturais
 
\begin_inset CommandInset citation
LatexCommand citet
key "sei2006architecture"

\end_inset

.
\end_layout

\begin_layout Standard
SADs são criados por especialistas nas áreas de domínio nas quais eles serão
 aplicados e implementados por programadores.
 Esse pode ser um processo lento e custoso, já que os dois grupos de profissiona
is têm 
\emph on
\lang english
backgrounds
\emph default
\lang brazilian
 diferentes e vão ter problemas de comunicação durante o processo de criação
 e testes de um SAD.
 Esses profissionais podem ser até de organizações diferentes, o que dificulta
 ainda mais o processo.
 Devido ao fato de que os elementos básicos de todo o SAD (Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Componentes-SAD"

\end_inset

) serem muito parecidos, é possível criar uma arquitetura que possa ser
 re\SpecialChar nobreakdash
usada em diferentes SADs (ou classes de SADs).
 Esta arquitetura pode ser baseada em componentes de software re\SpecialChar nobreakdash
usáveis.
 Programadores podem usar essa arquitetura e re\SpecialChar nobreakdash
usar os componentes de software,
 já desenvolvidos para ela, para implementar SADs mais rapidamente.
\end_layout

\begin_layout Standard
Para encontrar e configurar componentes de software de uma arquitetura,
 uma opção é descrever esses componentes, usando uma ontologia, e usar os
 termos dessa ontologia para encontrar os componentes corretos para uma
 aplicação 
\begin_inset CommandInset citation
LatexCommand citet
key "Linhalis2010"

\end_inset

.
 Essas ontologias podem ser criadas utilizando linguagens padrões da Web
 Semântica, como a Web Ontology Language (OWL
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "OWL"
description "Web Ontology Language"

\end_inset

), para melhor portabilidade 
\begin_inset CommandInset citation
LatexCommand citet
key "Pahl2007"

\end_inset

.
 Ontologias e padrões da Web Semântica serão abordados com mais profundidade
 no próximo capítulo.
\end_layout

\begin_layout Standard
Ontologias, que descrevam componentes de software para serem usados num
 SAD de um determinado domínio, terão uma grande quantidade de termos derivados
 desse domínio.
 Especialistas desse domínio terão familiaridade com esses termos e poderão
 especificar grande parte do fluxo de trabalho do SAD usando esses termos.
 Idealmente, essa especificação deve ser detalhada o suficiente para que
 programadores possam desenvolver a parte computacional do SAD sem necessidade
 de mais feedback dos especialistas.
\end_layout

\begin_layout Standard
Como especialistas de domínio não têm um conhecimento muito detalhado sobre
 linguagens de especificação de sistemas, é necessário o desenvolvimento
 de uma 
\lang english
Domain Specific Languag
\lang brazilian
e (DSL) adequada ao nível de conhecimento de computação dos especialistas.
 Essa linguagem também deve conter termos familiares ao domínio desses especiali
stas.
 
\end_layout

\begin_layout Section
Considerações Finais
\end_layout

\begin_layout Standard
Este capítulo apresentou os conceitos principais de SADs, incluindo a definição
 geral e a arquitetura de software.
 Ele também apontou para a necessidade da geração automática (ou semi\SpecialChar nobreakdash
automática)
 de interfaces gráficas de usuários SADs.
 Uma abordagem para conseguir a geração automática (ou semi\SpecialChar nobreakdash
automática) de
 GUIs consiste na integração com DSLs, onde sejam definidas as características
 gerais do sistema e integrado com os conceitos do domínio de conhecimento
 a través das ontologias usadas nesses sistemas.
\end_layout

\end_body
\end_document
